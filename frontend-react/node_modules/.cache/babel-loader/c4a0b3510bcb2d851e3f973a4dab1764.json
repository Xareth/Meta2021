{"ast":null,"code":"import _slicedToArray from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{FormHandler,UpdateFormOnChange}from\"../forms/FormHandler\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function _LoginForm(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loginForm=_useState2[0],setLoginForm=_useState2[1];// Load default view for submodule\nuseEffect(function(){FormHandler(\"/_login\",setLoginForm);},[]);// Handle form after submit button is pressed\nfunction AfterFormSubmit(event){event.preventDefault();// Simple POST request with a JSON body using fetch\nvar requestOptions={method:'POST',headers:{'Content-Type':'application/json'},dataType:'json',body:JSON.stringify(form)};fetch('/_login',requestOptions).then(function(response){return response.json();}).then(function(data){return console.log(data);});}// Each character input in form is recorded to form const\nfunction UpdateLoginFormOnChange(event){UpdateFormOnChange(event,loginForm,setLoginForm);// const targetEvent = event.target;\n// const { id, value } = targetEvent;\n// let updatedForm = loginForm;\n// updatedForm[id].value = value;\n// setLoginForm(updatedForm);\n}// Render form\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:AfterFormSubmit,children:[console.log(loginForm),loginForm.length>0?loginForm.map(function(data){return/*#__PURE__*/_jsx(Input,{id:data.id,label:data.label,type:data.type,field:data.field,update:UpdateLoginFormOnChange},data.id);}):\"\"]})});}// Render each field\nfunction Input(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:props.label}),/*#__PURE__*/_jsx(\"input\",{id:props.id,type:props.type,onChange:props.update,name:props.label})]});}export default _LoginForm;","map":{"version":3,"sources":["/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/src/components/users/_LoginForm.js"],"names":["React","useEffect","useState","FormHandler","UpdateFormOnChange","_LoginForm","props","loginForm","setLoginForm","AfterFormSubmit","event","preventDefault","requestOptions","method","headers","dataType","body","JSON","stringify","form","fetch","then","response","json","data","console","log","UpdateLoginFormOnChange","length","map","id","label","type","field","Input","update"],"mappings":"gNAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAQC,WAAR,CAAqBC,kBAArB,KAA8C,sBAA9C,C,wFAGA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eAEaJ,QAAQ,CAAC,EAAD,CAFrB,wCAEfK,SAFe,eAEJC,YAFI,eAIvB;AACAP,SAAS,CAAC,UAAM,CAACE,WAAW,CAAC,SAAD,CAAYK,YAAZ,CAAX,CAAqC,CAA7C,CAA+C,EAA/C,CAAT,CAEA;AACA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAE5BA,KAAK,CAACC,cAAN,GAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,QAAQ,CAAE,MAHS,CAInBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAJa,CAAvB,CAMAC,KAAK,CAAC,SAAD,CAAYR,cAAZ,CAAL,CACKS,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,IAAI,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ,EAFd,EAGH,CAED;AACA,QAASG,CAAAA,uBAAT,CAAiCjB,KAAjC,CAAwC,CACpCN,kBAAkB,CAACM,KAAD,CAAQH,SAAR,CAAmBC,YAAnB,CAAlB,CACA;AACA;AACA;AACA;AACA;AACH,CAED;AACA,mBAAQ,kCACJ,cAAM,QAAQ,CAAEC,eAAhB,WACKgB,OAAO,CAACC,GAAR,CAAYnB,SAAZ,CADL,CAEKA,SAAS,CAACqB,MAAV,CAAmB,CAAnB,CAAuBrB,SAAS,CAACsB,GAAV,CAAc,SAACL,IAAD,CAAU,CAAE,mBAAO,KAAC,KAAD,EAErD,EAAE,CAAEA,IAAI,CAACM,EAF4C,CAGrD,KAAK,CAAEN,IAAI,CAACO,KAHyC,CAIrD,IAAI,CAAEP,IAAI,CAACQ,IAJ0C,CAKrD,KAAK,CAAER,IAAI,CAACS,KALyC,CAMrD,MAAM,CAAEN,uBAN6C,EAChDH,IAAI,CAACM,EAD2C,CAAP,CAO7C,CAPmB,CAAvB,CAOQ,EATb,GADI,EAAR,CAaH,CAED;AACA,QAASI,CAAAA,KAAT,CAAe5B,KAAf,CAAsB,CAClB,mBAAO,oCACH,uBAAQA,KAAK,CAACyB,KAAd,EADG,cAEH,cAAO,EAAE,CAAEzB,KAAK,CAACwB,EAAjB,CAAqB,IAAI,CAAExB,KAAK,CAAC0B,IAAjC,CAAuC,QAAQ,CAAE1B,KAAK,CAAC6B,MAAvD,CAA+D,IAAI,CAAE7B,KAAK,CAACyB,KAA3E,EAFG,GAAP,CAIH,CAGD,cAAe1B,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {FormHandler, UpdateFormOnChange} from \"../forms/FormHandler\";\n\n\nfunction _LoginForm(props) {\n\n    const [ loginForm, setLoginForm ] = useState([]);\n\n    // Load default view for submodule\n    useEffect(() => {FormHandler(\"/_login\", setLoginForm)}, []);\n\n    // Handle form after submit button is pressed\n    function AfterFormSubmit(event) {\n\n        event.preventDefault()\n\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            dataType: 'json',\n            body: JSON.stringify(form)\n        };\n        fetch('/_login', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    }\n\n    // Each character input in form is recorded to form const\n    function UpdateLoginFormOnChange(event) {\n        UpdateFormOnChange(event, loginForm, setLoginForm)\n        // const targetEvent = event.target;\n        // const { id, value } = targetEvent;\n        // let updatedForm = loginForm;\n        // updatedForm[id].value = value;\n        // setLoginForm(updatedForm);\n    }\n\n    // Render form\n    return (<div>\n        <form onSubmit={AfterFormSubmit}>\n            {console.log(loginForm)}\n            {loginForm.length > 0 ? loginForm.map((data) => { return <Input\n                key={data.id}\n                id={data.id}\n                label={data.label}\n                type={data.type}\n                field={data.field}\n                update={UpdateLoginFormOnChange}\n            />  }) : \"\"}\n        </form>\n    </div>)\n}\n\n// Render each field\nfunction Input(props) {\n    return <div>\n        <label>{props.label}</label>\n        <input id={props.id} type={props.type} onChange={props.update} name={props.label} />\n    </div>\n}\n\n\nexport default _LoginForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function _LoginForm(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loginForm=_useState2[0],setLoginForm=_useState2[1];var _useState3=useState({\"email\":\"\",\"password\":\"\"}),_useState4=_slicedToArray(_useState3,2),form=_useState4[0],setForm=_useState4[1];// Load default view for submodule\nuseEffect(function(){fetch(\"/_users\").then(function(response){return response.json().then(function(data){setLoginForm(data.form);});}).catch(function(e){console.log(\"Error occured: \",e);});},[]);// Handle form after submit button is pressed\nfunction AfterFormSubmit(event){event.preventDefault();// Simple POST request with a JSON body using fetch\nvar requestOptions={method:'POST',headers:{'Content-Type':'application/json'},dataType:'json',body:JSON.stringify(form)};fetch('/_login',requestOptions).then(function(response){return response.json();}).then(function(data){return console.log(data);});}function UpdateFormOnChange(event){var _event$target=_slicedToArray(event.target,2),value=_event$target[0],name=_event$target[1];console.log(name,\": \",value);setForm(function(prevValue){return _objectSpread(_objectSpread({},prevValue),{},_defineProperty({},name,value));});}// Render form\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:AfterFormSubmit,children:[console.log(loginForm),loginForm.length>0?loginForm.map(function(data){return/*#__PURE__*/_jsx(Input,{label:data.label,type:data.type,update:UpdateFormOnChange},data.label);}):\"\"]})});}function Input(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:props.label}),/*#__PURE__*/_jsx(\"input\",{type:props.type,onChange:props.update,name:props.label})]});}export default _LoginForm;","map":{"version":3,"sources":["/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/src/components/users/_LoginForm.js"],"names":["React","useEffect","useState","_LoginForm","props","loginForm","setLoginForm","form","setForm","fetch","then","response","json","data","catch","e","console","log","AfterFormSubmit","event","preventDefault","requestOptions","method","headers","dataType","body","JSON","stringify","UpdateFormOnChange","target","value","name","prevValue","length","map","label","type","Input","update"],"mappings":"inBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eAEaF,QAAQ,CAAC,EAAD,CAFrB,wCAEfG,SAFe,eAEJC,YAFI,8BAGGJ,QAAQ,CAAC,CAC/B,QAAS,EADsB,CAE/B,WAAY,EAFmB,CAAD,CAHX,yCAGfK,IAHe,eAGTC,OAHS,eAQvB;AACAP,SAAS,CAAE,UAAM,CACbQ,KAAK,CAAC,SAAD,CAAL,CAAiBC,IAAjB,CAAsB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAAAG,IAAI,CAAI,CAC3DP,YAAY,CAACO,IAAI,CAACN,IAAN,CAAZ,CACH,CAFiC,CAAJ,EAA9B,EAEIO,KAFJ,CAEU,SAACC,CAAD,CAAO,CAAEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BF,CAA9B,EAAkC,CAFrD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAOA;AACA,QAASG,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAE5BA,KAAK,CAACC,cAAN,GAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,QAAQ,CAAE,MAHS,CAInBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAepB,IAAf,CAJa,CAAvB,CAMAE,KAAK,CAAC,SAAD,CAAYY,cAAZ,CAAL,CACKX,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,IAAI,QAAIG,CAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAAJ,EAFd,EAGH,CAED,QAASe,CAAAA,kBAAT,CAA4BT,KAA5B,CAAmC,kCACPA,KAAK,CAACU,MADC,IACvBC,KADuB,kBAChBC,IADgB,kBAE/Bf,OAAO,CAACC,GAAR,CAAYc,IAAZ,CAAkB,IAAlB,CAAwBD,KAAxB,EACAtB,OAAO,CAAC,SAAAwB,SAAS,CAAI,CACjB,sCACOA,SADP,wBAEKD,IAFL,CAEYD,KAFZ,GAIH,CALM,CAAP,CAMH,CAED;AACA,mBAAQ,kCACJ,cAAM,QAAQ,CAAEZ,eAAhB,WACKF,OAAO,CAACC,GAAR,CAAYZ,SAAZ,CADL,CAEKA,SAAS,CAAC4B,MAAV,CAAmB,CAAnB,CAAuB5B,SAAS,CAAC6B,GAAV,CAAc,SAACrB,IAAD,CAAU,CAAE,mBAAO,KAAC,KAAD,EAErD,KAAK,CAAEA,IAAI,CAACsB,KAFyC,CAGrD,IAAI,CAAEtB,IAAI,CAACuB,IAH0C,CAIrD,MAAM,CAAER,kBAJ6C,EAChDf,IAAI,CAACsB,KAD2C,CAAP,CAK7C,CALmB,CAAvB,CAKQ,EAPb,GADI,EAAR,CAWH,CAED,QAASE,CAAAA,KAAT,CAAejC,KAAf,CAAsB,CAClB,mBAAO,oCACH,uBAAQA,KAAK,CAAC+B,KAAd,EADG,cAEH,cAAO,IAAI,CAAE/B,KAAK,CAACgC,IAAnB,CAAyB,QAAQ,CAAEhC,KAAK,CAACkC,MAAzC,CAAiD,IAAI,CAAElC,KAAK,CAAC+B,KAA7D,EAFG,GAAP,CAIH,CAGD,cAAehC,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction _LoginForm(props) {\n\n    const [ loginForm, setLoginForm ] = useState([]);\n    const [ form, setForm ] = useState({\n        \"email\": \"\",\n        \"password\": \"\"\n    });\n\n    // Load default view for submodule\n    useEffect( () => {\n        fetch(\"/_users\").then(response => response.json().then(data => {\n            setLoginForm(data.form);\n        })).catch((e) => { console.log(\"Error occured: \",e) })\n    }, [])\n\n\n    // Handle form after submit button is pressed\n    function AfterFormSubmit(event) {\n\n        event.preventDefault()\n\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            dataType: 'json',\n            body: JSON.stringify(form)\n        };\n        fetch('/_login', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    }\n\n    function UpdateFormOnChange(event) {\n        const [ value, name ] = event.target;\n        console.log(name, \": \", value);\n        setForm(prevValue => {\n            return {\n                ...prevValue,\n                [name]: value\n            }\n        })\n    }\n\n    // Render form\n    return (<div>\n        <form onSubmit={AfterFormSubmit}>\n            {console.log(loginForm)}\n            {loginForm.length > 0 ? loginForm.map((data) => { return <Input\n                key={data.label}\n                label={data.label}\n                type={data.type}\n                update={UpdateFormOnChange}\n            />  }) : \"\"}\n        </form>\n    </div>)\n}\n\nfunction Input(props) {\n    return <div>\n        <label>{props.label}</label>\n        <input type={props.type} onChange={props.update} name={props.label} />\n    </div>\n}\n\n\nexport default _LoginForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";export function LoadForm(route,setForm){// Load default form\nfetch(route).then(function(response){return response.json().then(function(data){setForm(data.form);});}).catch(function(e){console.log(\"Error occured: \",e);});}export function UpdateFormOnChange(event,form,setForm){var targetEvent=event.target;var id=targetEvent.id,value=targetEvent.value;var updatedForm=form;updatedForm[id].value=value;setForm(updatedForm);console.log(updatedForm);}export function AfterFormSubmit(_x){return _AfterFormSubmit.apply(this,arguments);}function _AfterFormSubmit(){_AfterFormSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(request){var requestOptions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:requestOptions={method:'POST',headers:{'Content-Type':'application/json'},dataType:'json',body:JSON.stringify(request)};_context.next=3;return fetch('/_login',requestOptions).then(function(response){return response.json().then(function(data){console.log(\"udal sie response\");return 1;});}).catch(function(e){console.log(\"Error occured: \",e);return 0;});case 3:case\"end\":return _context.stop();}}},_callee);}));return _AfterFormSubmit.apply(this,arguments);}export function RenderForm(){}","map":{"version":3,"sources":["/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/src/components/forms/FormHandler.js"],"names":["React","LoadForm","route","setForm","fetch","then","response","json","data","form","catch","e","console","log","UpdateFormOnChange","event","targetEvent","target","id","value","updatedForm","AfterFormSubmit","request","requestOptions","method","headers","dataType","body","JSON","stringify","RenderForm"],"mappings":"6ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyBC,OAAzB,CAAkC,CAErC;AACAC,KAAK,CAACF,KAAD,CAAL,CAAaG,IAAb,CAAkB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAAAG,IAAI,CAAI,CACvDL,OAAO,CAACK,IAAI,CAACC,IAAN,CAAP,CACH,CAF6B,CAAJ,EAA1B,EAEIC,KAFJ,CAEU,SAACC,CAAD,CAAO,CAAEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BF,CAA9B,EAAkC,CAFrD,EAGH,CAED,MAAO,SAASG,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmCN,IAAnC,CAAyCN,OAAzC,CAAkD,CACrD,GAAMa,CAAAA,WAAW,CAAGD,KAAK,CAACE,MAA1B,CADqD,GAE7CC,CAAAA,EAF6C,CAE/BF,WAF+B,CAE7CE,EAF6C,CAEzCC,KAFyC,CAE/BH,WAF+B,CAEzCG,KAFyC,CAGrD,GAAIC,CAAAA,WAAW,CAAGX,IAAlB,CACAW,WAAW,CAACF,EAAD,CAAX,CAAgBC,KAAhB,CAAwBA,KAAxB,CACAhB,OAAO,CAACiB,WAAD,CAAP,CACAR,OAAO,CAACC,GAAR,CAAYO,WAAZ,EACH,CAED,eAAsBC,CAAAA,eAAtB,oD,qGAAO,iBAA+BC,OAA/B,qIAEGC,cAFH,CAEoB,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,QAAQ,CAAE,MAHS,CAInBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAJa,CAFpB,uBAQGlB,CAAAA,KAAK,CAAC,SAAD,CAAYmB,cAAZ,CAAL,CACDlB,IADC,CACI,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACZ,SAAAG,IAAI,CAAI,CACVI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACA,MAAO,EAAP,CACH,CAJiB,CAAJ,EADZ,EAKEH,KALF,CAKQ,SAACC,CAAD,CAAO,CACjBC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BF,CAA/B,EACA,MAAO,EAAP,CACC,CARC,CARH,uD,kDAoBP,MAAO,SAASmB,CAAAA,UAAT,EAAsB,CAE5B","sourcesContent":["import React from \"react\";\n\nexport function LoadForm(route, setForm) {\n\n    // Load default form\n    fetch(route).then(response => response.json().then(data => {\n        setForm(data.form)\n    })).catch((e) => { console.log(\"Error occured: \",e) })\n}\n\nexport function UpdateFormOnChange(event, form, setForm) {\n    const targetEvent = event.target;\n    const { id, value } = targetEvent;\n    let updatedForm = form;\n    updatedForm[id].value = value;\n    setForm(updatedForm);\n    console.log(updatedForm);\n}\n\nexport async function AfterFormSubmit(request) {\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        dataType: 'json',\n        body: JSON.stringify(request)\n    };\n    await fetch('/_login', requestOptions)\n        .then(response => response.json()\n        .then(data => {\n            console.log(\"udal sie response\")\n            return 1;\n        })).catch((e) => {\n        console.log(\"Error occured: \", e)\n        return 0;\n        })\n}\n\n\nexport function RenderForm() {\n\n}\n"]},"metadata":{},"sourceType":"module"}
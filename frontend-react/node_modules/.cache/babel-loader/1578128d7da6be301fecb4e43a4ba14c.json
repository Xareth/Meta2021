{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{LoadForm,UpdateFormOnChange,AfterFormSubmit,RenderForm}from\"../forms/FormHandler\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function _LoginForm(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loginForm=_useState2[0],setLoginForm=_useState2[1];// Load default view for submodule\nuseEffect(function(){LoadForm(\"/_login\",setLoginForm);},[]);// Handle form after submit button is pressed\nfunction AfterLoginFormSubmit(_x){return _AfterLoginFormSubmit.apply(this,arguments);}// Each character input in form is recorded to form const\nfunction _AfterLoginFormSubmit(){_AfterLoginFormSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return AfterFormSubmit(event,loginForm);case 3:response=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return _AfterLoginFormSubmit.apply(this,arguments);}function UpdateLoginFormOnChange(event){UpdateFormOnChange(event,loginForm,setLoginForm);}// Render form\nreturn RenderForm(loginForm);// return (<div>\n//     <form onSubmit={AfterLoginFormSubmit}>\n//         {loginForm.length > 0 ? loginForm.map((data) => { return <Input\n//             key={data.id}\n//             id={data.id}\n//             label={data.label}\n//             type={data.type}\n//             field={data.field}\n//             update={UpdateLoginFormOnChange}\n//         />  }) : \"\"}\n//     </form>\n// </div>)\n}// Render each field\nfunction Input(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:props.label}),/*#__PURE__*/_jsx(\"input\",{id:props.id,type:props.type,onChange:props.update,name:props.label})]});}export default _LoginForm;","map":{"version":3,"sources":["/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/src/components/users/_LoginForm.js"],"names":["React","useEffect","useState","LoadForm","UpdateFormOnChange","AfterFormSubmit","RenderForm","_LoginForm","props","loginForm","setLoginForm","AfterLoginFormSubmit","event","response","console","log","UpdateLoginFormOnChange","Input","label","id","type","update"],"mappings":"6mBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAQC,QAAR,CAAkBC,kBAAlB,CAAsCC,eAAtC,CAAuDC,UAAvD,KAAwE,sBAAxE,C,wFAGA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eAEaN,QAAQ,CAAC,EAAD,CAFrB,wCAEfO,SAFe,eAEJC,YAFI,eAKvB;AACAT,SAAS,CAAC,UAAM,CAACE,QAAQ,CAAC,SAAD,CAAYO,YAAZ,CAAR,CAAkC,CAA1C,CAA4C,EAA5C,CAAT,CAGA;AATuB,QAURC,CAAAA,oBAVQ,yDAmBvB;AAnBuB,+GAUvB,iBAAoCC,KAApC,qKAE+BP,CAAAA,eAAe,CAACO,KAAD,CAAQH,SAAR,CAF9C,QAEcI,QAFd,6FAIQC,OAAO,CAACC,GAAR,cAJR,mEAVuB,uDAoBvB,QAASC,CAAAA,uBAAT,CAAiCJ,KAAjC,CAAwC,CACpCR,kBAAkB,CAACQ,KAAD,CAAQH,SAAR,CAAmBC,YAAnB,CAAlB,CACH,CAGD;AAEA,MAAOJ,CAAAA,UAAU,CAACG,SAAD,CAAjB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAED;AACA,QAASQ,CAAAA,KAAT,CAAeT,KAAf,CAAsB,CAClB,mBAAO,oCACH,uBAAQA,KAAK,CAACU,KAAd,EADG,cAEH,cAAO,EAAE,CAAEV,KAAK,CAACW,EAAjB,CAAqB,IAAI,CAAEX,KAAK,CAACY,IAAjC,CAAuC,QAAQ,CAAEZ,KAAK,CAACa,MAAvD,CAA+D,IAAI,CAAEb,KAAK,CAACU,KAA3E,EAFG,GAAP,CAIH,CAGD,cAAeX,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {LoadForm, UpdateFormOnChange, AfterFormSubmit, RenderForm} from \"../forms/FormHandler\";\n\n\nfunction _LoginForm(props) {\n\n    const [ loginForm, setLoginForm ] = useState([]);\n\n\n    // Load default view for submodule\n    useEffect(() => {LoadForm(\"/_login\", setLoginForm)}, []);\n\n\n    // Handle form after submit button is pressed\n    async function AfterLoginFormSubmit(event) {\n        try {\n            const response = await AfterFormSubmit(event, loginForm);\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n\n    // Each character input in form is recorded to form const\n    function UpdateLoginFormOnChange(event) {\n        UpdateFormOnChange(event, loginForm, setLoginForm);\n    }\n\n\n    // Render form\n\n    return RenderForm(loginForm)\n\n    // return (<div>\n    //     <form onSubmit={AfterLoginFormSubmit}>\n    //         {loginForm.length > 0 ? loginForm.map((data) => { return <Input\n    //             key={data.id}\n    //             id={data.id}\n    //             label={data.label}\n    //             type={data.type}\n    //             field={data.field}\n    //             update={UpdateLoginFormOnChange}\n    //         />  }) : \"\"}\n    //     </form>\n    // </div>)\n}\n\n// Render each field\nfunction Input(props) {\n    return <div>\n        <label>{props.label}</label>\n        <input id={props.id} type={props.type} onChange={props.update} name={props.label} />\n    </div>\n}\n\n\nexport default _LoginForm;"]},"metadata":{},"sourceType":"module"}
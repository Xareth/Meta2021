{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";// Render form operations (Update on change, After submit button)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RenderForm(form,setForm,methods){// Load form\nuseEffect(function(){fetch(\"/_login\").then(function(response){return response.json().then(function(data){setForm(data.form);});}).catch(function(e){console.log(\"Error occured: \",e);});},[]);// Update form on every change\nfunction UpdateOnChange(event){var targetEvent=event.target;var id=targetEvent.id,value=targetEvent.value;var updatedForm=form;updatedForm[id].value=value;setForm(updatedForm);console.log(updatedForm);}// Action after submit button is pressed\nfunction AfterFormSubmit(_x){return _AfterFormSubmit.apply(this,arguments);}// Render form\nfunction _AfterFormSubmit(){_AfterFormSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var requestOptions,response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();requestOptions={method:'POST',headers:{'Content-Type':'application/json'},dataType:'json',body:JSON.stringify(form)};_context.next=4;return fetch('/_login',requestOptions);case 4:response=_context.sent;result=response.json();console.log(result);methods.setSubMod(result.route);case 8:case\"end\":return _context.stop();}}},_callee);}));return _AfterFormSubmit.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"form\",{onSubmit:AfterFormSubmit,children:form.length>0?form.map(function(data){return/*#__PURE__*/_jsx(Input,{id:data.id,label:data.label,type:data.type,field:data.field,update:UpdateOnChange},data.id);}):\"\"})});}function Input(props){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:props.label}),/*#__PURE__*/_jsx(\"input\",{id:props.id,type:props.type,onChange:props.update,name:props.label})]});}export default RenderForm;","map":{"version":3,"sources":["/Users/mikolajszadkowski/Library/Mobile Documents/com~apple~CloudDocs/AppDevelopment/motortest/Mnet 2020/Mnet2/frontend-react/src/components/forms/FormHandler.js"],"names":["React","useEffect","RenderForm","form","setForm","methods","fetch","then","response","json","data","catch","e","console","log","UpdateOnChange","event","targetEvent","target","id","value","updatedForm","AfterFormSubmit","preventDefault","requestOptions","method","headers","dataType","body","JSON","stringify","result","setSubMod","route","length","map","label","type","field","Input","props","update"],"mappings":"6ZAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAGA;wFACA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,OAA1B,CAAmCC,OAAnC,CAA4C,CAExC;AACAJ,SAAS,CAAC,UAAM,CACZK,KAAK,CAAC,SAAD,CAAL,CAAiBC,IAAjB,CAAsB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAAAG,IAAI,CAAI,CAC3DN,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP,CACH,CAFiC,CAAJ,EAA9B,EAEIQ,KAFJ,CAEU,SAACC,CAAD,CAAO,CAAEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BF,CAA9B,EAAkC,CAFrD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAOA;AACA,QAASG,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC3B,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAACE,MAA1B,CAD2B,GAEnBC,CAAAA,EAFmB,CAELF,WAFK,CAEnBE,EAFmB,CAEfC,KAFe,CAELH,WAFK,CAEfG,KAFe,CAG3B,GAAIC,CAAAA,WAAW,CAAGlB,IAAlB,CACAkB,WAAW,CAACF,EAAD,CAAX,CAAgBC,KAAhB,CAAwBA,KAAxB,CACAhB,OAAO,CAACiB,WAAD,CAAP,CACAR,OAAO,CAACC,GAAR,CAAYO,WAAZ,EACH,CAGD;AArBwC,QAsBzBC,CAAAA,eAtByB,oDAuCxC;AAvCwC,qGAsBxC,iBAA+BN,KAA/B,qJAEIA,KAAK,CAACO,cAAN,GAEMC,cAJV,CAI2B,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,QAAQ,CAAE,MAHS,CAInBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe3B,IAAf,CAJa,CAJ3B,uBAU2BG,CAAAA,KAAK,CAAC,SAAD,CAAYkB,cAAZ,CAVhC,QAUUhB,QAVV,eAWUuB,MAXV,CAWmBvB,QAAQ,CAACC,IAAT,EAXnB,CAYII,OAAO,CAACC,GAAR,CAAYiB,MAAZ,EACA1B,OAAO,CAAC2B,SAAR,CAAkBD,MAAM,CAACE,KAAzB,EAbJ,sDAtBwC,kDAwCxC,mBAAQ,kCACJ,aAAM,QAAQ,CAAEX,eAAhB,UACKnB,IAAI,CAAC+B,MAAL,CAAc,CAAd,CAAkB/B,IAAI,CAACgC,GAAL,CAAS,SAACzB,IAAD,CAAU,CAAE,mBAAO,KAAC,KAAD,EAE3C,EAAE,CAAEA,IAAI,CAACS,EAFkC,CAG3C,KAAK,CAAET,IAAI,CAAC0B,KAH+B,CAI3C,IAAI,CAAE1B,IAAI,CAAC2B,IAJgC,CAK3C,KAAK,CAAE3B,IAAI,CAAC4B,KAL+B,CAM3C,MAAM,CAAEvB,cANmC,EACtCL,IAAI,CAACS,EADiC,CAAP,CAOnC,CAPc,CAAlB,CAOQ,EARb,EADI,EAAR,CAYH,CAGD,QAASoB,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAClB,mBAAO,oCACH,uBAAQA,KAAK,CAACJ,KAAd,EADG,cAEH,cAAO,EAAE,CAAEI,KAAK,CAACrB,EAAjB,CAAqB,IAAI,CAAEqB,KAAK,CAACH,IAAjC,CAAuC,QAAQ,CAAEG,KAAK,CAACC,MAAvD,CAA+D,IAAI,CAAED,KAAK,CAACJ,KAA3E,EAFG,GAAP,CAIH,CAED,cAAelC,CAAAA,UAAf","sourcesContent":["import React, {useEffect} from \"react\";\n\n\n// Render form operations (Update on change, After submit button)\nfunction RenderForm(form, setForm, methods) {\n\n    // Load form\n    useEffect(() => {\n        fetch(\"/_login\").then(response => response.json().then(data => {\n            setForm(data.form)\n        })).catch((e) => { console.log(\"Error occured: \",e) })\n    }, []);\n\n\n    // Update form on every change\n    function UpdateOnChange(event) {\n        const targetEvent = event.target;\n        const { id, value } = targetEvent;\n        let updatedForm = form;\n        updatedForm[id].value = value;\n        setForm(updatedForm);\n        console.log(updatedForm);\n    }\n\n\n    // Action after submit button is pressed\n    async function AfterFormSubmit(event) {\n\n        event.preventDefault()\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            dataType: 'json',\n            body: JSON.stringify(form)\n        };\n        const response = await fetch('/_login', requestOptions);\n        const result = response.json();\n        console.log(result);\n        methods.setSubMod(result.route);\n    }\n\n\n    // Render form\n    return (<div>\n        <form onSubmit={AfterFormSubmit}>\n            {form.length > 0 ? form.map((data) => { return <Input\n                key={data.id}\n                id={data.id}\n                label={data.label}\n                type={data.type}\n                field={data.field}\n                update={UpdateOnChange}\n            />  }) : \"\"}\n        </form>\n    </div>)\n}\n\n\nfunction Input(props) {\n    return <div>\n        <label>{props.label}</label>\n        <input id={props.id} type={props.type} onChange={props.update} name={props.label} />\n    </div>\n}\n\nexport default RenderForm;"]},"metadata":{},"sourceType":"module"}